filetype off 
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

syntax on
set ai
"set si
set ts=2
set sw=2
set hlsearch
set mouse=a
filetype plugin on
filetype indent on
set backspace=indent,eol,start
set ruler
set modeline
let g:tex_flavor='latex'
let g:miniBufExplMapWindowNavVim = 1
set nospell
set expandtab
set completeopt+=menuone,longest,preview

"autocmd Filetype tex set spell
"au BufRead,BufNewFile *.txt set filetype=txt
"autocmd Filetype txt set spell

python << endpython
import os, vim
cwd = os.getcwd()
naoHome = os.getenv('NAO_HOME')
if naoHome is not None:
  prefix = os.path.commonprefix([cwd,naoHome])
  if os.path.samefile(prefix,naoHome):
    vim.command("set makeprg=$NAO_HOME/build/compile") 
endpython

" switch to directory of current file
command! CD cd %:p:h

" insert one character
nnoremap <Space> :exec "normal i".nr2char(getchar())."\e"<CR>

colorscheme darkzen

"look for the tag file going up the directories
set tags=./tags;/

"start at same position
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

"toggle into paste mode
nnoremap <F4> :set invpaste paste?<CR>
set pastetoggle=<F4>
set showmode

"Toggle tagbar pane
nnoremap <silent> <F1> :TagbarToggle<CR>

"Toggle file tree pane
nnoremap <silent> <F3> :NERDTreeToggle<CR>

"Toggle buffer explorer
nnoremap <silent> <F2> :TMiniBufExplorer<CR>

inoremap hh <Esc>

let snips_author = 'Samuel Barrett'

" Tag bar configuration
let g:tagbar_left = 1 "open on the left side
let g:tagbar_autoclose = 1 "close after jumping to a tag
let g:tagbar_autofocus = 1 "steal focus when opening

" Command-T
noremap <leader>o <Esc>:CommandT<CR>
noremap <leader>O <Esc>:CommandTFlush<CR>
noremap <leader>m <Esc>:CommandTBuffer<CR>

let g:SuperTabDefaultCompletionType = "context"
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif 
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" python specific
autocmd FileType python compiler pylint
let g:pylint_onwrite = 0
let g:pylint_signs = 0
let g:pylint_show_rate = 0

let ropevim_guess_project = 1
let ropevim_enable_shortcuts = 1
let ropevim_extended_complete = 1
inoremap <C-t> <C-R>=RopeCodeAssistInsertMode() <CR>
map <Leader>u :RopeUndo <CR>
map <Leader>r :RopeRedo <CR>
map <Leader>g :RopeGotoDefinition <CR>
map <Leader>d :RopeShowDoc <CR>
let ropevim_vim_completion=1
let ropevim_enable_autoimport=1
let ropevim_autoimport_modules = ["os","shutil"]

