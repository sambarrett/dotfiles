#!/usr/bin/env python3
# encoding: utf-8

import argparse
import datetime
from enum import Enum
import os
import re
import subprocess
import sys


class Action(Enum):
    edit = 1
    list = 2
    last = 3


def editByDate(dir, base, date):
    if base is None:
        print('Must specify base', file=sys.stderr)
        sys.exit(2)
    dateStr = date.strftime('%Y-%m-%d')
    filename = os.path.join(dir, '%s-%s.txt' % (dateStr, base))
    editByFilename(filename)


def editByFilename(filename):
    subprocess.call(['vim', filename])


def validDir(dir):
    if os.path.isdir(dir):
        return dir
    else:
        raise Exception('Not a valid dir: {}'.format(dir))


def getFilesMatchingPattern(dir, base):
    prefix = '\d+-\d+-\d+-'
    pattern = prefix + (opts.base if base is not None else '.*')
    pattern = re.compile(pattern)
    return filter(lambda x: pattern.match(x), os.listdir(opts.dir))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('base', nargs='?', default=None)
    parser.add_argument('-d', '--dir', action='store', type=validDir, default=os.path.expanduser('~/notes'))
    parser.add_argument('-a', '--action', choices=list(Action), default=Action.edit, type=lambda x: Action[x])
    for a in Action:
        parser.add_argument('--{}'.format(a.name), dest='action', action='store_const', const=a)
    opts = parser.parse_args()

    if opts.action == Action.edit:
        editByDate(opts.dir, opts.base, datetime.date.today())
    elif opts.action == Action.list:
        for filename in getFilesMatchingPattern(opts.dir, opts.base):
            print(filename)
    elif opts.action == Action.last:
        lastDate = datetime.date(year=2000, month=1, day=1)
        lastFilename = None
        for filename in getFilesMatchingPattern(opts.dir, opts.base):
            dateStr = '-'.join(filename.split('-')[:3])
            d = datetime.datetime.strptime(dateStr, '%Y-%m-%d').date()
            if d > lastDate:
                lastDate = d
                lastFilename = filename
        if lastFilename is None:
            print('No filename found')
            sys.exit(3)
        res = input('edit {} (Y/n)? '.format(lastFilename))
        if res.lower() in ['', 'y', 'yes']:
            editByFilename(os.path.join(opts.dir, lastFilename))
        else:
            print('aborting')
            sys.exit(0)
    else:
        print('Unhandled action: {}'.format(opts.action), file=sys.stderr)
        sys.exit(2)
